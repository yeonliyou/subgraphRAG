WARNING 07-27 07:16:34 arg_utils.py:839] Chunked prefill is enabled by default for models with max_model_len > 32K. Currently, chunked prefill might not work with some features or models. If you encounter any issues, please disable chunked prefill by setting --enable-chunked-prefill=False.
INFO 07-27 07:16:34 config.py:911] Chunked prefill is enabled with max_num_batched_tokens=512.
INFO 07-27 07:16:34 llm_engine.py:184] Initializing an LLM engine (v0.5.5) with config: model='meta-llama/Meta-Llama-3.1-8B-Instruct', speculative_config=None, tokenizer='meta-llama/Meta-Llama-3.1-8B-Instruct', skip_tokenizer_init=False, tokenizer_mode=auto, revision=None, rope_scaling=None, rope_theta=None, tokenizer_revision=None, trust_remote_code=False, dtype=torch.bfloat16, max_seq_len=131072, download_dir=None, load_format=LoadFormat.AUTO, tensor_parallel_size=1, pipeline_parallel_size=1, disable_custom_all_reduce=False, quantization=None, enforce_eager=False, kv_cache_dtype=auto, quantization_param_path=None, device_config=cuda, decoding_config=DecodingConfig(guided_decoding_backend='outlines'), observability_config=ObservabilityConfig(otlp_traces_endpoint=None, collect_model_forward_time=False, collect_model_execute_time=False), seed=0, served_model_name=meta-llama/Meta-Llama-3.1-8B-Instruct, use_v2_block_manager=False, enable_prefix_caching=False)
INFO 07-27 07:16:36 model_runner.py:879] Starting to load model meta-llama/Meta-Llama-3.1-8B-Instruct...
INFO 07-27 07:16:37 weight_utils.py:236] Using model weights format ['*.safetensors']
Loading safetensors checkpoint shards:   0% Completed | 0/4 [00:00<?, ?it/s]
Loading safetensors checkpoint shards:  25% Completed | 1/4 [00:00<00:00,  4.88it/s]
Loading safetensors checkpoint shards:  50% Completed | 2/4 [00:01<00:01,  1.62it/s]
Loading safetensors checkpoint shards:  75% Completed | 3/4 [00:02<00:00,  1.22it/s]
Loading safetensors checkpoint shards: 100% Completed | 4/4 [00:03<00:00,  1.08it/s]
Loading safetensors checkpoint shards: 100% Completed | 4/4 [00:03<00:00,  1.23it/s]
INFO 07-27 07:16:41 model_runner.py:890] Loading model weights took 14.9888 GB
INFO 07-27 07:16:42 gpu_executor.py:121] # GPU blocks: 13416, # CPU blocks: 2048
INFO 07-27 07:16:43 model_runner.py:1181] Capturing the model for CUDA graphs. This may lead to unexpected consequences if the model is not static. To run the model in eager mode, set 'enforce_eager=True' or use '--enforce-eager' in the CLI.
INFO 07-27 07:16:43 model_runner.py:1185] CUDA graphs can take additional 1~3 GiB memory per GPU. If you are running out of memory, consider decreasing `gpu_memory_utilization` or enforcing eager mode. You can also reduce the `max_num_seqs` as needed to decrease memory usage.
INFO 07-27 07:16:56 model_runner.py:1300] Graph capturing finished in 13 secs.
Loading subgraphs...

README.md: 1.03kB [00:00, 1.59MB/s]
Resolving data files: 100%|██████████████████████████████████████████████████████████████████████████| 22/22 [00:00<00:00, 73.51it/s]
Resolving data files: 100%|██████████████████████████████████████████████████████████████████████| 22/22 [00:00<00:00, 161601.91it/s]
data/train-00000-of-00022.parquet: 100%|████████████████████████████████████████████████████████| 73.1M/73.1M [00:22<00:00, 3.28MB/s]
data/train-00001-of-00022.parquet: 100%|████████████████████████████████████████████████████████| 73.1M/73.1M [00:06<00:00, 11.7MB/s]
data/train-00002-of-00022.parquet: 100%|████████████████████████████████████████████████████████| 73.1M/73.1M [00:06<00:00, 11.8MB/s]
data/train-00003-of-00022.parquet: 100%|████████████████████████████████████████████████████████| 73.4M/73.4M [00:06<00:00, 11.9MB/s]
data/train-00004-of-00022.parquet: 100%|████████████████████████████████████████████████████████| 73.8M/73.8M [00:05<00:00, 12.3MB/s]
data/train-00005-of-00022.parquet: 100%|████████████████████████████████████████████████████████| 73.4M/73.4M [00:06<00:00, 11.8MB/s]
data/train-00006-of-00022.parquet: 100%|████████████████████████████████████████████████████████| 73.1M/73.1M [00:06<00:00, 11.8MB/s]
data/train-00007-of-00022.parquet: 100%|████████████████████████████████████████████████████████| 73.3M/73.3M [00:06<00:00, 12.1MB/s]
data/train-00008-of-00022.parquet: 100%|████████████████████████████████████████████████████████| 73.4M/73.4M [00:05<00:00, 12.3MB/s]
data/train-00009-of-00022.parquet: 100%|████████████████████████████████████████████████████████| 73.2M/73.2M [00:05<00:00, 12.4MB/s]
data/train-00010-of-00022.parquet: 100%|████████████████████████████████████████████████████████| 72.9M/72.9M [00:07<00:00, 10.1MB/s]
data/train-00011-of-00022.parquet: 100%|████████████████████████████████████████████████████████| 73.3M/73.3M [00:06<00:00, 12.1MB/s]
data/train-00012-of-00022.parquet: 100%|████████████████████████████████████████████████████████| 73.5M/73.5M [00:06<00:00, 11.6MB/s]
data/train-00013-of-00022.parquet: 100%|████████████████████████████████████████████████████████| 73.0M/73.0M [00:06<00:00, 11.7MB/s]
data/train-00014-of-00022.parquet: 100%|████████████████████████████████████████████████████████| 73.1M/73.1M [00:05<00:00, 12.4MB/s]
data/train-00015-of-00022.parquet: 100%|████████████████████████████████████████████████████████| 73.1M/73.1M [00:06<00:00, 12.0MB/s]
data/train-00016-of-00022.parquet: 100%|████████████████████████████████████████████████████████| 73.1M/73.1M [00:06<00:00, 12.0MB/s]
data/train-00017-of-00022.parquet: 100%|████████████████████████████████████████████████████████| 73.3M/73.3M [00:06<00:00, 11.8MB/s]
data/train-00018-of-00022.parquet: 100%|████████████████████████████████████████████████████████| 73.3M/73.3M [00:06<00:00, 12.0MB/s]
data/train-00019-of-00022.parquet: 100%|████████████████████████████████████████████████████████| 73.2M/73.2M [00:05<00:00, 12.5MB/s]
data/train-00020-of-00022.parquet: 100%|████████████████████████████████████████████████████████| 73.5M/73.5M [00:06<00:00, 11.9MB/s]
data/train-00021-of-00022.parquet: 100%|████████████████████████████████████████████████████████| 73.0M/73.0M [00:05<00:00, 12.4MB/s]
Downloading data: 100%|███████████████████████████████████████████████████████████████████████████| 22/22 [02:42<00:00,  7.37s/files]
data/validation-00000-of-00003.parquet: 100%|███████████████████████████████████████████████████| 67.1M/67.1M [00:06<00:00, 11.0MB/s]
data/validation-00001-of-00003.parquet: 100%|███████████████████████████████████████████████████| 67.1M/67.1M [00:06<00:00, 11.1MB/s]
data/validation-00002-of-00003.parquet: 100%|███████████████████████████████████████████████████| 66.8M/66.8M [00:05<00:00, 11.3MB/s]
data/test-00000-of-00003.parquet: 100%|█████████████████████████████████████████████████████████| 66.9M/66.9M [00:06<00:00, 11.1MB/s]
data/test-00001-of-00003.parquet: 100%|█████████████████████████████████████████████████████████| 67.2M/67.2M [00:06<00:00, 10.7MB/s]
data/test-00002-of-00003.parquet: 100%|█████████████████████████████████████████████████████████| 67.4M/67.4M [00:06<00:00, 11.1MB/s]
Generating train split: 100%|███████████████████████████████████████████████████████| 114196/114196 [00:26<00:00, 4235.28 examples/s]
Generating validation split: 100%|████████████████████████████████████████████████████| 14274/14274 [00:03<00:00, 4223.59 examples/s]
Generating test split: 100%|██████████████████████████████████████████████████████████| 14274/14274 [00:03<00:00, 4471.85 examples/s]
Adding subgraphs to data...
  0%|                                                                                                       | 0/3531 [00:00<?, ?it/s]
[rank0]: Traceback (most recent call last):
[rank0]:   File "/home/dongcheon/SubgraphRAG/reason/main.py", line 164, in <module>
[rank0]:     main()
[rank0]:   File "/home/dongcheon/SubgraphRAG/reason/main.py", line 140, in main
[rank0]:     data = get_data(dataset_name, pred_file_path, score_dict_path, split, prompt_mode)
[rank0]:   File "/home/dongcheon/SubgraphRAG/reason/preprocess/prepare_data.py", line 124, in get_data
[rank0]:     assert each_qa["id"] == subgraphs[i]["id"]
[rank0]: AssertionError
[rank0]: Traceback (most recent call last):
[rank0]:   File "/home/dongcheon/SubgraphRAG/reason/main.py", line 164, in <module>
[rank0]:     main()
[rank0]:   File "/home/dongcheon/SubgraphRAG/reason/main.py", line 140, in main
[rank0]:     data = get_data(dataset_name, pred_file_path, score_dict_path, split, prompt_mode)
[rank0]:   File "/home/dongcheon/SubgraphRAG/reason/preprocess/prepare_data.py", line 124, in get_data
[rank0]:     assert each_qa["id"] == subgraphs[i]["id"]
[rank0]: AssertionError
