WARNING 07-01 12:14:59 arg_utils.py:839] Chunked prefill is enabled by default for models with max_model_len > 32K. Currently, chunked prefill might not work with some features or models. If you encounter any issues, please disable chunked prefill by setting --enable-chunked-prefill=False.
INFO 07-01 12:14:59 config.py:911] Chunked prefill is enabled with max_num_batched_tokens=512.
INFO 07-01 12:14:59 llm_engine.py:184] Initializing an LLM engine (v0.5.5) with config: model='meta-llama/Meta-Llama-3.1-8B-Instruct', speculative_config=None, tokenizer='meta-llama/Meta-Llama-3.1-8B-Instruct', skip_tokenizer_init=False, tokenizer_mode=auto, revision=None, rope_scaling=None, rope_theta=None, tokenizer_revision=None, trust_remote_code=False, dtype=torch.bfloat16, max_seq_len=131072, download_dir=None, load_format=LoadFormat.AUTO, tensor_parallel_size=1, pipeline_parallel_size=1, disable_custom_all_reduce=False, quantization=None, enforce_eager=False, kv_cache_dtype=auto, quantization_param_path=None, device_config=cuda, decoding_config=DecodingConfig(guided_decoding_backend='outlines'), observability_config=ObservabilityConfig(otlp_traces_endpoint=None, collect_model_forward_time=False, collect_model_execute_time=False), seed=0, served_model_name=meta-llama/Meta-Llama-3.1-8B-Instruct, use_v2_block_manager=False, enable_prefix_caching=False)
INFO 07-01 12:15:02 model_runner.py:879] Starting to load model meta-llama/Meta-Llama-3.1-8B-Instruct...
INFO 07-01 12:15:04 weight_utils.py:236] Using model weights format ['*.safetensors']
Loading safetensors checkpoint shards:   0% Completed | 0/4 [00:00<?, ?it/s]
Loading safetensors checkpoint shards:  25% Completed | 1/4 [00:00<00:00,  6.32it/s]
Loading safetensors checkpoint shards:  50% Completed | 2/4 [00:00<00:00,  2.17it/s]
Loading safetensors checkpoint shards:  75% Completed | 3/4 [00:01<00:00,  1.74it/s]
Loading safetensors checkpoint shards: 100% Completed | 4/4 [00:02<00:00,  1.59it/s]
Loading safetensors checkpoint shards: 100% Completed | 4/4 [00:02<00:00,  1.78it/s]
INFO 07-01 12:15:08 model_runner.py:890] Loading model weights took 14.9888 GB
INFO 07-01 12:15:08 gpu_executor.py:121] # GPU blocks: 13416, # CPU blocks: 2048
INFO 07-01 12:15:09 model_runner.py:1181] Capturing the model for CUDA graphs. This may lead to unexpected consequences if the model is not static. To run the model in eager mode, set 'enforce_eager=True' or use '--enforce-eager' in the CLI.
INFO 07-01 12:15:09 model_runner.py:1185] CUDA graphs can take additional 1~3 GiB memory per GPU. If you are running out of memory, consider decreasing `gpu_memory_utilization` or enforcing eager mode. You can also reduce the `max_num_seqs` as needed to decrease memory usage.
INFO 07-01 12:15:21 model_runner.py:1300] Graph capturing finished in 12 secs.
Loading subgraphs...

Resolving data files: 100%|███████████████████████████████████████████████████████████████| 18/18 [00:01<00:00, 17.74it/s]
Resolving data files: 100%|███████████████████████████████████████████████████████████| 18/18 [00:00<00:00, 146597.03it/s]
Adding subgraphs to data...
100%|█████████████████████████████████████████████████████████████████████████████████| 3531/3531 [02:56<00:00, 20.01it/s]
Adding good triplets from ROG...
100%|██████████████████████████████████████████████████████████████████████████████| 3531/3531 [00:00<00:00, 15614.63it/s]
Adding scored triplets...
100%|█████████████████████████████████████████████████████████████████████████████| 3531/3531 [00:00<00:00, 686701.32it/s]
Triplets not found for 0 questions
Generating prompts...
Starting inference...
 63%|████████████████████████████████████████████████▌                            | 2229/3531 [3:38:15<4:51:12, 13.42s/it]
